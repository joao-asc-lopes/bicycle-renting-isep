--DROP TABLES

DROP TABLE Users CASCADE CONSTRAINTS PURGE;
DROP TABLE Rentals CASCADE CONSTRAINTS PURGE;
DROP TABLE Road_Bicycles CASCADE CONSTRAINTS PURGE;
DROP TABLE Electric_Bicycles CASCADE CONSTRAINTS PURGE;
DROP TABLE Bicycles CASCADE CONSTRAINTS PURGE;
DROP TABLE Parks CASCADE CONSTRAINTS PURGE;
DROP TABLE Slots CASCADE CONSTRAINTS PURGE;
DROP TABLE Bicycle_Slot CASCADE CONSTRAINTS PURGE;
DROP TABLE Mountain_Bicycles CASCADE CONSTRAINTS PURGE;
DROP TABLE Batteries CASCADE CONSTRAINTS PURGE;
DROP TABLE Interest_Points CASCADE CONSTRAINTS PURGE;
DROP TABLE Locations CASCADE CONSTRAINTS PURGE;
DROP TABLE Receipts CASCADE CONSTRAINTS PURGE;
DROP TABLE Receipt_Rental CASCADE CONSTRAINTS PURGE;
DROP TABLE Electric_Slots CASCADE CONSTRAINTS PURGE;
DROP TABLE Normal_Slots CASCADE CONSTRAINTS PURGE;
DROP TABLE Path_Information CASCADE CONSTRAINTS PURGE;

--CREATE TABLES

CREATE TABLE Electric_Slots(
    id_slots INTEGER CONSTRAINT pk_electric_slots_id_slots PRIMARY KEY,
    charge_rate NUMBER   CONSTRAINT nn_electric_slots_charge_rate NOT NULL, CONSTRAINT ck_eletric_slots_charge_rate CHECK(charge_rate > 0),
    intensity NUMBER CONSTRAINT nn_electric_slots_intensity NOT NULL, CONSTRAINT ck_eletric_slots_intensity CHECK(intensity > 0)
);

CREATE TABLE Normal_Slots(
  id_slots INTEGER CONSTRAINT pk_normal_slots_id_slots PRIMARY KEY
);

CREATE TABLE Receipts(
    id_receipt INTEGER GENERATED BY DEFAULT AS IDENTITY CONSTRAINT pk_receipts_id PRIMARY KEY, CONSTRAINT ck_receipts_id CHECK(id_receipt>=0),
    receipt_date DATE CONSTRAINT nn_receipts_date NOT NULL,
    payment_value FLOAT CONSTRAINT nn_receipts_payment_value NOT NULL, CONSTRAINT ck_receipts_payment_value CHECK(payment_value >=0),
    iva NUMBER CONSTRAINT nn_receipts_iva NOT NULL, CONSTRAINT ck_receipts_iva CHECK(iva>=0)
    );

CREATE TABLE Receipt_Rental(
  id_receipt INTEGER CONSTRAINT ck_receipt_rental_id_receipt check(id_receipt >=0),
  id_rental INTEGER CONSTRAINT ck_receipt_rental_id_rental check(id_rental >=0),
  CONSTRAINT pk_receipt_rental PRIMARY KEY (id_receipt, id_rental)
);

CREATE TABLE Locations (
    id_location INTEGER GENERATED BY DEFAULT AS IDENTITY CONSTRAINT nn_locations_id_park NOT NULL, CONSTRAINT ck_locations_id_park CHECK (id_location >=0),
    name_location VARCHAR(100) CONSTRAINT nn_locations_name_location NOT NULL,
    altitude NUMBER CONSTRAINT nn_locations_altitude NOT NULL, CONSTRAINT ck_locations_altitude CHECK(altitude >= 0),
    latitude NUMBER CONSTRAINT nn_locations_latitude NOT NULL, CONSTRAINT ck_locations_latitude CHECK(latitude >=-90 and latitude <= 90),
    longitude NUMBER CONSTRAINT nn_locations_longitude NOT NULL, CONSTRAINT ck_locations_longitude CHECK(longitude >=-180 and latitude <= 180),
    CONSTRAINT pk_locations PRIMARY KEY(id_location)
);

CREATE TABLE Interest_Points (
    id_interest_point INTEGER CONSTRAINT pk_interest_point_id_interest_point PRIMARY KEY, CONSTRAINT ck_interest_point_id_interest_point CHECK(id_interest_point >=0)
);

CREATE TABLE Users(
    username        VARCHAR(50),            CONSTRAINT pk_users_username PRIMARY KEY(username),
    email          VARCHAR(100)             CONSTRAINT u_users_email UNIQUE,
    password       VARCHAR(200),
    salt           VARCHAR(10),
    name           VARCHAR(80)              CONSTRAINT nn_Users_name NOT NULL,
    totalDistance         NUMERIC(5,2)             CONSTRAINT nn_Users_weight NOT NULL,
    height         NUMERIC(5,2)             CONSTRAINT nn_Users_height NOT NULL,
    credit_card         INTEGER            CONSTRAINT nn_Users_credit_card NOT NULL, CONSTRAINT ck_User_credit_card CHECK(REGEXP_LIKE(credit_card,'\d{16}')),
    has_active_rental   INTEGER             CONSTRAINT nn_Users_has_active_rental NOT NULL, CONSTRAINT ck_User_has_active_rental CHECK(has_active_rental =0 OR has_active_rental =1), -- 0 = false and 1 = true;
    points    INTEGER CONSTRAINT nn_users_points NOT NULL, CONSTRAINT ck_users_points CHECK(points >=0),
    average_speed NUMBER CONSTRAINT nn_users_average_speed NOT NULL, CONSTRAINT ck_users_average_speed CHECK(average_speed > 0)
);

CREATE TABLE Road_Bicycles(
    id_bike             VARCHAR(30)            CONSTRAINT pk_RoadBicycle_id_bike PRIMARY KEY--FOREIGN KEY
);

CREATE TABLE Electric_Bicycles(
    id_bike VARCHAR(30)  CONSTRAINT pk_electric_bicycles_id_bike PRIMARY KEY,
    id_battery INTEGER CONSTRAINT nn_electric_bicycles_id_battery CHECK(id_battery > 0)
);

CREATE TABLE Bicycles(
    id_bike VARCHAR(30) CONSTRAINT pk_Bicycle_id_bike PRIMARY KEY,
    state  INTEGER CONSTRAINT nn_Bicycle_state NOT NULL, CONSTRAINT ck_Bicycle_state CHECK(state = 1 OR state = 2 OR state = 3), --1 = Available, 2 = in_use, 3 = broken
    totalDistance NUMBER CONSTRAINT nn_bicycles_weight NOT NULL, CONSTRAINT ck_bicycles_weight CHECK(totalDistance>=0),
    aerodynamic_coefficient NUMBER CONSTRAINT nn_bicycles_aerodynamic_coefficient NOT NULL, 
                                   CONSTRAINT ck_bicycles_aerodynamic_coefficient CHECK (aerodynamic_coefficient>0),
    frontal_area NUMBER CONSTRAINT nn_bicycles_frontal_area NOT NULL, CONSTRAINT ck_bicycles_frontal_area CHECK(frontal_area > 0)
);

CREATE TABLE Rentals(
    id_rental   INTEGER GENERATED BY DEFAULT AS IDENTITY CONSTRAINT pk_rental_id_rental PRIMARY KEY, CONSTRAINT ck_rental_id_bike CHECK(id_rental >=0),
    id_bike           VARCHAR(30) CONSTRAINT nn_rental_id_bike NOT NULL,             --FOREIGN KEY
    username            VARCHAR(100)  CONSTRAINT nn_rental_username NOT NULL,
    pick_up_park INTEGER CONSTRAINT nn_rental_pick_up_park NOT NULL,
    left_at_park INTEGER,
    unlock_date         TIMESTAMP       CONSTRAINT nn_rental_unlock_date NOT NULL,
    lock_date           TIMESTAMP ,
    state_rental        INTEGER         CONSTRAINT nn_rental_state_rental NOT NULL, CONSTRAINT ck_Rental_state CHECK(state_rental = 0 OR state_rental=1),
    rental_payment  INTEGER CONSTRAINT nn_rental_rental_payment NOT NULL, CONSTRAINT ck_rental_payment CHECK(rental_payment = 0 OR rental_payment = 1),
    CONSTRAINT ck_Rentals_lock_date CHECK (lock_date >= unlock_date)
);

  -- Creation of the table Park

CREATE TABLE Parks (
    id_park INTEGER CONSTRAINT pk_park_id_park PRIMARY KEY, CONSTRAINT ck_park_id_park CHECK (id_park >=0),
    id_normal_slots INTEGER CONSTRAINT nn_park_id_normal_slot NOT NULL, CONSTRAINT ck_park_id_normal_slot CHECK(id_normal_slots >=0),
    id_electric_slots INTEGER CONSTRAINT nn_park_id_electric_slot NOT NULL, CONSTRAINT ck_park_id_electric_slot CHECK(id_electric_slots >=0)
);

    --Creation of the table Slot
CREATE TABLE Slots(
    id_slots INTEGER GENERATED BY DEFAULT AS IDENTITY CONSTRAINT pk_slot_id_slot PRIMARY KEY, CONSTRAINT ck_slot_id_slot CHECK (id_slots >= 0),
    max_capacity INTEGER CONSTRAINT nn_slot_max_capacity NOT NULL, CONSTRAINT ck_slot_max_capacity CHECK(max_capacity >= 0),
    free_slots INTEGER CONSTRAINT nn_slot_free_slots NOT NULL, CONSTRAINT ck_slot_free_slots CHECK (free_slots >=0),
    type INTEGER CONSTRAINT nn_slots_type NOT NULL, CONSTRAINT ck_slots_type CHECK(type = 0 OR type = 1) --0 = normal, 1 = electric
);

--Creation of table Path_Information
CREATE TABLE Path_Information (
    id_initial_park NUMBER  CONSTRAINT nn_path_information_id_initial_park NOT NULL, CONSTRAINT ck_path_information_id_initial_park CHECK(id_initial_park >= 0),
    id_final_park  NUMBER CONSTRAINT nn_path_information_id_final_park NOT NULL, CONSTRAINT ck_path_information_id_final_park CHECK(id_final_park >= 0),
   wind_speed NUMBER CONSTRAINT nn_path_information_wind_speed NOT NULL, CONSTRAINT ck_path_information_wind_speed CHECK(wind_speed>=0),
  wind_dir INTEGER CONSTRAINT nn_path_information_wind_dir NOT NULL, CONSTRAINT ck_path_information_wind_dir CHECK(wind_dir=0 OR wind_dir = 1 OR wind_dir = -1),
    kinectic_friction NUMBER   CONSTRAINT nn_path_information_kinetic_friction NOT NULL
);

    -- Creation of the Table that relates Bicycle with Slot
CREATE TABLE Bicycle_Slot (
    id_bike VARCHAR(30) CONSTRAINT nn_bicycle_slot_id_bike NOT NULL,
    id_slot INTEGER CONSTRAINT nn_bicycle_slot_id_slot NOT NULL, CONSTRAINT ck_bicycle_slot_id_slot CHECK (id_slot >=0),
    left_at_date TIMESTAMP CONSTRAINT nn_bicycle_slot_left_at_date NOT NULL,
    CONSTRAINT pk_bicycle_slot PRIMARY KEY (id_bike,id_slot)
);

    -- Creation of the table Mountain Bicycle
CREATE TABLE Mountain_Bicycles  (
    id_bike VARCHAR(30)  CONSTRAINT pk_mountain_bicycle_slot_id_bike PRIMARY KEY
);

    -- Creation of the table Battery
CREATE TABLE Batteries (
    battery_id INTEGER GENERATED BY DEFAULT AS IDENTITY CONSTRAINT pk_battery_battery_id PRIMARY KEY, CONSTRAINT ck_battery_battery_id CHECK(battery_id >=0),
    max_charge NUMBER(*) CONSTRAINT nn_battery_maximum_battery_charge NOT NULL, CONSTRAINT ck_battery_maximum_battery_charge CHECK(max_charge >=0),
    current_charge NUMBER(*) CONSTRAINT nn_battery_current_battery_charge NOT NULL, CONSTRAINT ck_battery_current_battery_charge CHECK(current_charge >=0 AND current_charge <= max_charge),
    voltage NUMBER(*) CONSTRAINT nn_battery_voltage NOT NULL, CONSTRAINT ck_battery_voltage CHECK(voltage >=0),
    totalDistance NUMBER CONSTRAINT nn_battery_weight NOT NULL, CONSTRAINT ck_battery_weight CHECK(totalDistance>=0)
);

ALTER TABLE Road_Bicycles ADD CONSTRAINT fk_Road_Bicycle_id_bike FOREIGN KEY(id_bike) REFERENCES Bicycles(id_bike);
ALTER TABLE Mountain_Bicycles ADD CONSTRAINT fk_mountain_bicycle_miss_bicycle FOREIGN KEY (id_bike) REFERENCES Bicycles(id_bike);
ALTER TABLE Electric_Bicycles ADD CONSTRAINT fk_Electric_Bicycle_id_bike FOREIGN KEY(id_bike) REFERENCES Bicycles(id_bike);
ALTER TABLE Electric_Bicycles ADD CONSTRAINT fk_Electric_Bicycle_id_battery FOREIGN KEY(id_battery) REFERENCES Batteries(battery_id);

ALTER TABLE Rentals ADD CONSTRAINT fk_Rentals_id_bike FOREIGN KEY(id_bike) REFERENCES Bicycles(id_bike);
ALTER TABLE Rentals ADD CONSTRAINT fk_Rentals_u_username FOREIGN KEY(username) REFERENCES Users(username) ON DELETE CASCADE;
ALTER TABLE Rentals ADD CONSTRAINT fk_Rentals_pick_up_park FOREIGN KEY (pick_up_park) REFERENCES Parks(id_park);
ALTER TABLE Rentals ADD CONSTRAINT fk_Rentals_left_at_park FOREIGN KEY (left_at_park) REFERENCES Parks(id_park);

ALTER TABLE Receipt_Rental ADD CONSTRAINT fk_receipt_rental_id_receipt FOREIGN KEY (id_receipt) REFERENCES Receipts(id_receipt);
ALTER TABLE Receipt_Rental ADD CONSTRAINT fk_receipt_rental_id_rental FOREIGN KEY (id_rental) REFERENCES Rentals(id_rental) ON DELETE CASCADE;

ALTER TABLE Parks ADD CONSTRAINT fk_park_id_park FOREIGN KEY (id_park) REFERENCES Locations(id_location);
ALTER TABLE Parks ADD CONSTRAINT fk_park_miss_normal_slots FOREIGN KEY (id_normal_slots) REFERENCES Normal_Slots(id_slots);
ALTER TABLE Parks ADD CONSTRAINT fk_park_miss_electric_slots FOREIGN KEY (id_electric_slots) REFERENCES Electric_Slots(id_slots);

ALTER TABLE Normal_Slots ADD CONSTRAINT fk_normal_slots_id_slots FOREIGN KEY (id_slots) REFERENCES Slots(id_slots);
ALTER TABLE Electric_Slots ADD CONSTRAINT fk_electric_slots_id_slots FOREIGN KEY (id_slots) REFERENCES Slots(id_slots);

ALTER TABLE Interest_Points ADD CONSTRAINT fk_interest_points_id FOREIGN KEY (id_interest_point) REFERENCES Locations(id_location);

ALTER TABLE Bicycle_Slot ADD CONSTRAINT fk_bicycle_slot_miss_slot FOREIGN KEY (id_slot) REFERENCES Slots(id_slots);
ALTER TABLE Bicycle_Slot ADD CONSTRAINT fk_bicycle_slot_miss_bicycle FOREIGN KEY(id_bike) REFERENCES Bicycles(id_bike);

ALTER TABLE Path_Information ADD CONSTRAINT pk_path_information PRIMARY KEY(id_initial_park, id_final_park);
ALTER TABLE Path_Information ADD CONSTRAINT fk_path_information_initial_park FOREIGN KEY(id_initial_park)REFERENCES Parks(id_park);
ALTER TABLE Path_Information ADD CONSTRAINT fk_path_information_final_park FOREIGN KEY(id_final_park)REFERENCES Parks(id_park);
